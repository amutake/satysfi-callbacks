@require: list

module PubSub : sig
  type 'a topic
  val make : unit -> 'a topic
  val publish : 'a -> 'a topic -> unit
  val subscribe : ('a -> unit) -> 'a topic -> unit
end = struct
  type 'a topic = Topic of (('a -> unit) list) ref
  let make () =
    let-mutable topic <- [] in
    Topic topic
  let publish e (Topic t) =
    List.iter (fun f -> f e) !t
  let subscribe f (Topic t) =
    t <- f :: !t
end
